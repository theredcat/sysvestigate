{
  "name": "blessed-contrib",
  "version": "1.0.9",
  "description": "Build dashboards (or any other application) using ascii/ansi art and javascript.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yaronn/blessed-contrib.git"
  },
  "author": {
    "name": "Yaron Naveh",
    "url": "yaronn01@gmail.com"
  },
  "license": "",
  "devDependencies": {
    "blessed": "^0.0.44"
  },
  "dependencies": {
    "ansi-term": ">=0.0.1",
    "map-canvas": ">=0.0.4",
    "drawille-canvas-blessed-contrib": ">=0.0.1",
    "memory-streams": "^0.1.0",
    "picture-tube": "0.0.4",
    "sparkline": "^0.1.1",
    "term-canvas": "0.0.5"
  },
  "readme": "## blessed-contrib\n\nBuild dashboards (or any other application) using ascii/ansi art and javascript.\n\nFriendly to terminals, ssh and developers. Extends [blessed](https://github.com/chjj/blessed) with custom  [drawille](https://github.com/madbence/node-drawille) and other widgets.\n\n\n**Contributors:**\n\nYaron Naveh ([@YaronNaveh](http://twitter.com/YaronNaveh))\n\n**Demo ([full size](https://raw.githubusercontent.com/yaronn/blessed-contrib/master/docs/images/term3.gif)):**\n\n<img src=\"./docs/images/term3.gif\" alt=\"term\" width=\"800\">\n\n([source code](./examples/dashboard.js))\n\n**Running the demo**\n\n    git clone https://github.com/yaronn/blessed-contrib.git\n    cd blessed-contrib\n    npm install\n    node ./examples/dashboard.js\n\nTested on Linux and OS X. In order to use on windows need to install Braille fonts (not tested).\n\n## Installation (to build custom projects)\n\n    npm install blessed\n    npm install blessed-contrib\n\n##Usage\n\nYou can use any of the default widgets of [blessed](https://github.com/chjj/blessed) (texts, lists and etc) or the widgets added in blessed-contrib (described bellow). The widgets in blessed-contrib follow the same usage pattern:\n\n`````javascript\n   var blessed = require('blessed')\n     , contrib = require('blessed-contrib')\n     , screen = blessed.screen()\n     , line = contrib.line(\n         { style: \n           { line: \"yellow\"\n           , text: \"green\"\n           , baseline: \"black\"}\n         , xLabelPadding: 3\n         , xPadding: 5\n         , label: 'Title'})\n     , data = {\n         x: ['t1', 't2', 't3', 't4'],\n         y: [5, 1, 7, 5]\n      }\n   screen.append(line) //must append before setting data\n   line.setData(data.x, data.y)\n   \n   screen.key(['escape', 'q', 'C-c'], function(ch, key) {\n     return process.exit(0);\n   });\n\n   screen.render()\n`````\n\nSee bellow for a complete list of widgets.\n\nYou can also use a layout to position the widgets for you (details in the layouts section).\n\n\n## Widgets\n\n\n### Line Chart\n\n<img src=\"./docs/images/line.gif\" alt=\"line\" width=\"400\">\n\n`````javascript\n   var line = contrib.line(\n         { style: \n           { line: \"yellow\"\n           , text: \"green\"\n           , baseline: \"black\"}\n         , xLabelPadding: 3\n         , xPadding: 5\n         , label: 'Title'})\n   var data = {\n         x: ['t1', 't2', 't3', 't4'],\n         y: [5, 1, 7, 5]\n      }\n   screen.append(line) //must append before setting data\n   line.setData(data.x, data.y)\n`````\n\n\n### Bar Chart\n\n<img src=\"./docs/images/bar.gif\" alt=\"bar\" width=\"250\">\n\n`````javascript\n    var bar = contrib.bar(\n       { label: 'Server Utilization (%)'\n       , barWidth: 4\n       , barSpacing: 6\n       , xOffset: 0\n       , maxHeight: 9})\n    screen.append(bar) //must append before setting data   \n    bar.setData(\n       { titles: ['bar1', 'bar2']\n       , data: [5, 10]})\n`````\n\n\n### Map\n\n<img src=\"./docs/images/map.gif\" alt=\"map\" width=\"500\">\n\n`````javascript\n   var map = contrib.map({label: 'World Map'})\n   map.addMarker({\"lon\" : \"37.5000\", \"lat\" : \"-79.0000\", color: \"red\", char: \"X\" })\n`````\n\n\n### Gauge\n\n<img src=\"./docs/images/gauge.gif\" alt=\"gauge\" width=\"170\">\n\n`````javascript\n   var gauge = contrib.gauge({label: 'Progress'})\n   gauge.setPercent(25)\n`````\n\n### Rolling Log\n\n<img src=\"./docs/images/log.gif\" alt=\"log\" width=\"180\">\n\n`````javascript\n   var log = contrib.log(\n      { fg: \"green\"\n      , selectedFg: \"green\"\n      , label: 'Server Log'})\n   log.log(\"new log line\")\n`````\n\n\n### Picture\n\n`````javascript\n    var pic = contrib.picture(\n       { file: './flower.png'\n       , cols: 25\n       , onReady: ready})\n    function ready() {screen.render()}\n`````\n\nnote: only png images are supported\n\n\n### Sparkline\n\n<img src=\"./docs/images/spark.gif\" alt=\"spark\" width=\"180\">\n\n`````javascript\n   var spark = contrib.sparkline(\n     { label: 'Throughput (bits/sec)'\n     , tags: true\n     , style: { fg: 'blue' }})\n\n   sparkline.setData(\n   [ 'Sparkline1', 'Sparkline2'], \n   [ [10, 20, 30, 20]\n   , [40, 10, 40, 50]])\n`````\n\n### Table\n\n<img src=\"./docs/images/table.gif\" alt=\"table\" width=\"250\">\n\n`````javascript\n   var table = contrib.table(\n     { keys: true\n     , fg: 'green'\n     , label: 'Active Processes'\n     , columnSpacing: [16, 12, 12] /*or just 16*/})\n\n   //allow control the table with the keyboard\n   table.focus()\n\n   table.setData(\n   { headers: ['col1', 'col2']\n   , data: \n      [ [1, 2] \n      , [3, 4] ]})\n`````\n\n### Layouts\n\n\n### Grid\n\nA grid layout can auto position your elements in a grid layout.\nWhen using a grid, you should not create the widgets, rather specify to the grid which widget to create and with which params.\n\n`````javascript\n   var screen = blessed.screen()\n\n   var grid = new contrib.grid({rows: 1, cols: 2})\n\n   //grid.set(row, col, rowSpan, colSpan, obj, opts)\n   grid.set(0, 1, 1, 1, contrib.map, {label: 'World Map'})\n   grid.set(0, 1, 1, 1, blessed.box, {content: 'My Box'})\n\n   grid.applyLayout(screen)\n\n   screen.render\n`````\n\nGrids can be nested:\n\n`````javascript\n   var grid = new contrib.grid({rows: 1, cols: 2})\n   var grid1 = new contrib.grid({rows: 1, cols: 2})\n\n   grid.set(0, 0, 1, 1, contrib.map, {label: 'World Map'})\n   grid1.set(0, 0, 1, 1, blessed.box, {content: 'My Box'})\n   grid1.set(0, 1, 1, 1, blessed.box, {content: 'My Box'})\n\n   grid.set(0, 1, 1, 1, grid1)\n`````\n\n\n## Samples\n\n\n### Terminal Dashboard\n\n<img src=\"./docs/images/term3.gif\" alt=\"term\" width=\"800\">\n\n**Running the sample**\n\n    git clone https://github.com/yaronn/blessed-contrib.git\n    cd blessed-contrib\n    npm install\n    node ./examples/dashboard.js\n\n**Installation (for a custom dashbaord)**\n\n    npm install blessed\n    npm install blessed-contrib\n\n\n**A simple dashboard**\n\n`````javascript\n   var blessed = require('blessed')\n     , contrib = require('blessed-contrib')\n     , screen = blessed.screen()\n     , grid = new contrib.grid({rows: 1, cols: 2})\n\n   grid.set(0, 0, 1, 1, contrib.line, \n     { style: \n       { line: \"yellow\"\n       , text: \"green\"\n       , baseline: \"black\"}\n     , xLabelPadding: 3\n     , xPadding: 5\n     , label: 'Stocks'})\n\n   grid.set(0, 1, 1, 1, contrib.map, {label: 'Servers Location'})\n\n   grid.applyLayout(screen)\n\n   var line = grid.get(0, 0)\n   var map = grid.get(0, 1)\n\n   var lineData = {\n      x: ['t1', 't2', 't3', 't4'],\n      y: [5, 1, 7, 5]\n   }\n\n   line.setData(lineData.x, lineData.y)\n\n   screen.key(['escape', 'q', 'C-c'], function(ch, key) {\n     return process.exit(0);\n   });\n\n   screen.render()\n`````\n\n**Rich dashboard**\n\nSee [source code](./examples/dashboard.js)\n\n## License\nThis library is under the [MIT License](http://opensource.org/licenses/MIT)\n\n## More Information\nCreated by Yaron Naveh ([twitter](http://twitter.com/YaronNaveh), [blog](http://webservices20.blogspot.com/))\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/yaronn/blessed-contrib/issues"
  },
  "homepage": "https://github.com/yaronn/blessed-contrib",
  "_id": "blessed-contrib@1.0.9",
  "_shasum": "9a87d04fbc34f434afb42cb2c6b6a97180ab62bd",
  "_from": "blessed-contrib@1.0.9",
  "_resolved": "https://registry.npmjs.org/blessed-contrib/-/blessed-contrib-1.0.9.tgz"
}
